---
# tasks file for master
- name: Reset Kubernetes Master
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: Create k8s tmp folder
  file:
    path: /tmp/rak8s
    state: directory

- name: Create k8s config
  template:
    src: kubeadm-config.yml
    dest: /tmp/rak8s/kubeadm-config.yml
    owner: root
    group: root
    mode: 0755

- name: "Initialize first master {{ kubernetes_version }}"
  shell: kubeadm init --ignore-preflight-errors=all --config=/tmp/rak8s/kubeadm-config.yml
  retries: 3
  register: kubeadm_init_first
  when: inventory_hostname == groups['master'][0] and kubeadm_reset is succeeded

- name: Upload certificates
  shell: kubeadm init phase --config=/tmp/rak8s/kubeadm-config.yml upload-certs --experimental-upload-certs
  register: kubeadm_upload_cert
  when: inventory_hostname == groups['master'][0] and kubeadm_init_first is succeeded

- name: Set kubeadm certificate key
  set_fact:
    kubeadm_certificate_key: "{{ hostvars[groups['master'][0]]['kubeadm_upload_cert'].stdout_lines[-1] | trim }}"
  when: kubeadm_upload_cert is succeeded

- name: Create Kubernetes config directory
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy admin.conf to config directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    remote_src: yes
    backup: yes
  when: inventory_hostname == groups['master'][0]

- name: Generate join token
  delegate_to: "{{ groups['master'][0] }}"
  shell: kubeadm token create --print-join-command
  register: kubeadm_join_cmd

- set_fact:
    kubeadm_join: "{{ kubeadm_join_cmd.stdout }}"

- name: Install Flannel (Networking)
  shell: "curl -sSL https://rawgit.com/coreos/flannel/{{ flannel_version }}/Documentation/kube-flannel.yml | kubectl create -f -" 
  when: inventory_hostname == groups['master'][0]

- name: Join Kubernetes Cluster
  shell: "{{ kubeadm_join }} --certificate-key={{ kubeadm_certificate_key }} --ignore-preflight-errors=all --experimental-control-plane"
  when: inventory_hostname != groups['master'][0] and kubeadm_reset is succeeded

- name: Copy admin.conf to config directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    remote_src: yes
    backup: yes
  when: inventory_hostname != groups['master'][0]

- name: Poke kubelet
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  register: kubelet_poke
